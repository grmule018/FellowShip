package com.bridglabz.datastructures2;

public class LinkedListA {
	public Node head;
	public int size;
	
	public void display() {
		System.out.println("Link list");
		Node currNode=head;
		while (currNode!=null)
		{
			System.out.println(""+ currNode.data);
			currNode=currNode.next;
		}
	}
	
	public void addAtBegin(int data) {
		Node n=new Node(data);
		n.data=data;
		if(head ==null)
		{ 
			head=n;
		}
		else {
				n.next=head;
				head=n;
			}
		size++;
	}
	
	public void addAtEnd(int data) {
		Node n=new Node(data);
		Node temp = head;
		while(temp.next!=null) {
		temp = temp.next;
		}
		temp.next=n;
		size++;
	}
	public void addAtPos(int data, int pos) {
		Node n=new Node(data);
		Node temp=head;
		if(head==null)
			{ addAtBegin(data);}
		else {
		int count=1;
		while(count<pos-1) {
			temp=temp.next;
			count++;
		}          
		n.next=temp.next;
		temp.next=n;
		size++;
		}
	}
	
	public void deleteAtPos(int pos){
		Node temp= head;
		
		int count=1;
		while(count< pos-1) {
		temp= temp.next;
			count++;
		}Node temp1=temp.next;
			temp.next=temp1.next;
		temp1=null;
		size--;
		}
		
	
	public boolean isEmpty()
	{
		return head == null;
	}

	public void deleteAtBegin() {
		Node temp = head;
		head = head.next;
		
		temp=null;
		size--;
		}

	public void deleteAtEnd() {
		Node temp= head;
		while(temp.next==null) {
		temp= temp.next;
		}
		head = head.next;
		temp=null;
		size--;
	}
}
	

	
		


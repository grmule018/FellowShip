package com.bridglabz.utility;

import java.util.Stack;

public class StackUtility <T>
{
	Node <T> head;
	
	public  void push(Object item)
	{
		Node<T> newNode = new Node<T>();
		newNode.data =  item;
		
		if(head == null)
		{
			head = newNode;
		}
		else
		{
			newNode.next =   head;
			head = newNode;
		}
	}
	
	public boolean pop()
	{
		Node <T> tempNode = head;
		
		if(head.next == null)
		{
			return false;
		}
		else
		{
			head = head.next;
			Object deleted = tempNode.data;
			tempNode = null;
			return true;
		}
	
	}
	
	public Object peek()
	{
		Object topElement = null;
		topElement = head.data;
			
		return topElement;
	}
	
	public boolean isEmpty()
	{
		if(head == null)
		{
			return false;
		}
		else
		{
			return true;
		}
	}
	public int size()
	{
		int top=0;
		Node <T> tempNode = new Node<T>();
		tempNode = head;
		while(tempNode!=null)
		{
			top++;
			tempNode = tempNode.next;
		}
		return top;
	}
	
	public void viewStack()
	{
		Node <T> tempNode = new Node<T>();
		tempNode = head;
		System.out.print("Stack Elements = ");
		while(tempNode!=null)
		{
			System.out.print(tempNode.data+" ");
			tempNode = tempNode.next;
		}
		System.out.println(" ");
	}
	
	public static void viewStackAnagram() 
	{
		Node <T> tempNode = new Node<T>();
		tempNode = head;
		int iCnt = 0;
		while(tempNode!=null)
		{
			if(iCnt<2)
			{
				System.out.println(tempNode.data+" ");
				iCnt++;
			}
			else
			{
				System.out.println();
				iCnt = 0;
			}
			
			tempNode = tempNode.next;
		}
		System.out.println(" ");
		return iCnt;
	}
	public static Stack anagramToStack()
	{
		Stack stack = new Stack();
		String arr1[][] = new String[10][30];
		int y = 0;

		int[] arr = new int[170];

		for (int i = 1; i <= 1000; i++) {
			boolean flag = true;

			for (int j = 2; j < i - 1; j++) {
				
				if (i % j == 0) 
				{
					flag = false;
					break;
				}
			}
			if (flag == true) {
				arr[y] = i;
				y++;
			}
			
		}
		
	
		int[] a= new int[170];
		
		for(int i=0;i<arr.length;i++)
		{
			a[i]=arr[i];
		}
		

		
		StringBuffer sb= new StringBuffer(arr.length);
		
		String s=" ";
		
		for(int i=0;i<arr.length;i++)
		{
			s=sb.append(a[i]+" ").toString();
		}
		
		String[] str=s.split(" ");
		
		
		boolean flag=true;
		String[][] s1=new String[arr.length][arr.length];
		//String[][] s2=new String[1000-arr.length][1000-arr.length];
		
		for(int k = 0;k<str.length-1;k++)
		{
			for(int l=k+1;l<str.length;l++)
			{
				flag=Utility.StringAnagram(str[k], str[l]);
			
			
				if(flag==true)
				{
					s1[k][l]=str[k]+" "+str[l];
					//System.out.println(s1[k][l]);
					stack.push(s1[k][l]);	
				}
			
			}
		}
		

		return stack;
		//stack.viewStack();
		
		
	}

}

